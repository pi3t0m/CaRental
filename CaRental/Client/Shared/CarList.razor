@inject ICarService CarService
@implements IDisposable

<ul class="list-unstyled">
    @foreach (var car in CarService.Cars)
    {
        <li class="media my-3">
            <div class="media-img-wrapper mr-2">
                <a href="/car/@car.Id">
                    <img class="media-img" src="@car.Image" alt="@car.Brand" />
                </a>
            </div>
            <div class="media-body">
                <a href="/car/@car.Id">
                    <h4 class="mb-0">@car.Brand</h4>
                </a>
                <p>@car.Description</p>
                <h5 class="price">
                    @GetPriceText(car)
                </h5>
            </div>
        </li>
    }
</ul>

@code {
    //[Parameter]
    //public int? CategoryId { get; set; } = null;

    protected override void OnInitialized()
    {
        //await CarService.LoadCars();
        CarService.onChange += StateHasChanged;
    }

    public void Dispose()
    {
        CarService.onChange -= StateHasChanged;
    }

    private string GetPriceText(Car car)
    {
        var variants = car.Variants;
        if (variants.Count == 0)
        {
            return string.Empty;
        }
        else if (variants.Count ==1)
        {
            return $"${variants[0].Price}";
        }
        decimal minPrice = variants.Min(v => v.Price);
        return $"Starting at ${minPrice}";
    }
}
