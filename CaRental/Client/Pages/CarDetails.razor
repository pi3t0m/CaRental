@page "/car/{id:int}"
@inject ICarService CarService
@inject ICartService CartService
@inject ILocalStorageService LocalStorage
@inject IToastService ToastService

@if (CarService.Cars == null || CarService.Cars.Count == 0)
{
    <span>Loading cars...</span>
}
else
{
<div class="views">
    <i class="oi oi-eye"></i> @GetViewString()
</div>
<div class="media">
    <div calls="media-img-big-wrapper mr-2">
        <img class="media-img-big" src="@car.Image" alt="@car.Brand" />
    </div>
    <div class="media-body">
        <h2 class="mb-0">@car.Brand</h2>
        <p>@car.Description</p>
        @if (car.Variants != null && car.Variants.Count > 1)
        {
           <div class="form-group">
               <select class="form-control" @bind="currentEditionId">
                    @foreach(var variant in car.Variants)
                    {
                        <option value="@variant.EditionId">@variant.Edition.Name</option>
                    }
                </select>
           </div>
        }
        @if(GetSelectedVariant() != null)
        {
            @if (GetSelectedVariant().OrginalPrice > GetSelectedVariant().Price)
            {
                            <h6 class="text-muted orginal-price">$@GetSelectedVariant().OrginalPrice</h6>
            }
            <h4 class="prcie">
                    $@GetSelectedVariant().Price
            </h4> 
        }
        <EditForm Model="cartItem">
            <div class="form-group">
                <InputNumber id="quantity" @bind-Value="cartItem.Quantity" class="form-control" style="width: 70px" />
            </div>
        </EditForm>
        <button class="btn btn-primary" @onclick="AddToCart"><i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add to Cart</button>
    </div>
</div>
}
    


@code {
    private Car car = new Car();

    private int currentEditionId = 1;

    private CartItem cartItem = new CartItem { Quantity = 1 };

    [Parameter]
    public int Id { get; set;  }

    protected override async Task OnParametersSetAsync()
    {
        car = await CarService.GetCar(Id); 
        if(car.Variants.Count > 0)
        {
            currentEditionId = car.Variants[0].EditionId;
        }
    }

    private CarVariant GetSelectedVariant()
    {
        var variant = car.Variants.FirstOrDefault(v => v.EditionId == currentEditionId);
        return variant;
    }

    private async Task AddToCart()
    {
        var carVariant = GetSelectedVariant();

        cartItem.EditionId = carVariant.EditionId;
        cartItem.EditionName = carVariant.Edition.Name;
        cartItem.Image = car.Image;
        cartItem.Price = carVariant.Price;
        cartItem.CarId = carVariant.CarId;
        cartItem.CarTitle = car.Brand;


        await CartService.AddToCart(cartItem);
    }

    private string GetViewString()
    {
        if (car.Views > 1000000)
            return $"{((float)car.Views / 1000000).ToString("#.##")}M";
        if (car.Views > 100000)
            return $"{((float)car.Views / 1000).ToString("#")}K";
        if (car.Views > 1000)
            return $"{((float)car.Views / 1000).ToString("#.##")}K";

        return car.Views.ToString("0##");
    }
}