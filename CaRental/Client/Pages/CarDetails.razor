@page "/car/{id:int}"
@inject ICarService CarService
@inject ICartService CartService
@inject ILocalStorageService LocalStorage
@inject IToastService ToastService

@if (car == null)
{
    <span>@message</span>
}
else
{
<div class="media">
    <div class="media-img-wrapper mr-4">
            @if (!string.IsNullOrEmpty(car.Image))
            {
                <img class="media-img" src="@car.Image" alt="@car.Brand" />
            }
            else
            {
                <MudCarousel Class="mud-width-full" ItemsSource="@car.FileImages" Style="height: 200px;">
                    <ItemTemplate>
                        <MudImage Src="@context.Data"></MudImage>
                    </ItemTemplate>
                </MudCarousel>
            }
        </div>
    <div class="media-body">
        <h2 class="mb-0">@car.Brand</h2>
        <p>@car.Description</p>
        @if(car.Variants != null && car.Variants.Count > 1)
        {
            <div class="mb-3">
                <select class="form-select" @bind="currentEditionId">
                    @foreach (var variant in car.Variants)
                    {
                        <option value="@variant.EditionId">@variant.Edition.Name</option>
                    }
                </select>
            </div>
        }
        @if(GetSelectedVariant() != null)
        {
            @if (GetSelectedVariant().OrginalPrice > GetSelectedVariant().Price)
            {
                <h6 class="text-muted orginal-price">
                    $@GetSelectedVariant().OrginalPrice
                </h6>
            }
            <h4 class="price">
                $@GetSelectedVariant().Price
            </h4> 
        }
        @if (isButtonDisabled == true)
        {
            <button disabled class="btn btn-primary" @onclick="AddToCart">
                <i class="oi oi-cart"></i>&nbsp; Car is already in cart!
            </button>
        }
        else
        {
            <button class="btn btn-primary" @onclick="AddToCart">
                <i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add to Cart
            </button> 
        }
    </div>
</div>
}
    


@code {
    private Car? car = null;
    private string message = string.Empty;
    private int currentEditionId = 1;
    private bool isButtonDisabled = false;

    //private CartItem cartItem = new CartItem { Quantity = 1 };

    [Parameter]
    public int Id { get; set;  }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading cars...";
        isButtonDisabled = await CartService.CheckCars(Id);
        var result = await CarService.GetCar(Id);
        if(!result.Success)
        {
            message = result.Message;
        }
        else
        {
            car = result.Data;
            if (car.Variants.Count > 0)
            {
                currentEditionId = car.Variants[0].EditionId;
            }
        }
    }

    private CarVariant GetSelectedVariant()
    {
        var variant = car.Variants.FirstOrDefault(v => v.EditionId == currentEditionId);
        return variant;
    }

    private async Task AddToCart()
    {
        var carVarinat = GetSelectedVariant();
        var cartItem = new CartItem
            {
                CarId = carVarinat.CarId,
                EditionId = carVarinat.EditionId
            };
        isButtonDisabled = true;
        await CartService.AddToCart(cartItem);
    }
}